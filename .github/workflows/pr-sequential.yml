on: pull_request

name: Review

env:
    COMPOSE_USER: runner

jobs:
    install-and-test:
        runs-on: ubuntu-latest
        name: Run all PHP steps
        steps:
            - uses: actions/checkout@v4
            - run: |
                docker pull itkdev/php8.3-fpm:latest
                docker image save itkdev/php8.3-fpm:latest --output ${{ runner.temp }}/php8.3-fpm-latest.tar

                docker network create frontend
                docker compose run --rm phpfpm composer install
                  
                docker compose run --rm phpfpm composer validate composer.json --strict
                docker compose run --rm phpfpm composer normalize --dry-run
                docker compose run --rm phpfpm composer audit

                docker compose run --rm phpfpm bin/console doctrine:migrations:migrate --no-interaction
                docker compose run --rm phpfpm bin/console doctrine:schema:validate

                docker compose run --rm phpfpm composer code-analysis

                docker compose run --rm phpfpm composer coding-standards-check

                docker compose exec phpfpm composer coding-standards-check/twig-cs-fixer

                docker compose run -e XDEBUG_MODE=coverage --rm phpfpm vendor/bin/phpunit --coverage-clover=coverage/unit.xml

    changelog:
        runs-on: ubuntu-latest
        name: Changelog should be updated
        strategy:
            fail-fast: false
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
                with:
                    fetch-depth: 2

            -   name: Git fetch
                run: git fetch

            -   name: Check that changelog has been updated.
                run: git diff --exit-code origin/${{ github.base_ref }} -- CHANGELOG.md && exit 1 || exit 0

    assets-coding-standards:
        name: Assets coding standards
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Coding standards
                run: |
                    docker network create frontend
                    docker compose run --rm node npm install
                    docker compose run --rm node npm run actions/check-coding-standards-assets

    markdown-coding-standards:
        name: Markdown coding standards
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Coding standards
                run: |
                    docker network create frontend
                    docker compose run --rm node npm install
                    docker compose run --rm node npm run coding-standards-check/markdownlint
