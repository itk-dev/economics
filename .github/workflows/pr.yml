on: pull_request

name: Review

env:
    COMPOSE_USER: runner

jobs:
    docker-image-pull:
        runs-on: ubuntu-latest
        name: Docker pull & save
        steps:
            - uses: actions/checkout@v4
            - run: |
                docker pull itkdev/php8.3-fpm:latest
                docker image save itkdev/php8.3-fpm:latest --output ${{ runner.temp }}/php8.3-fpm-latest.tar

            - name: Upload image
              uses: actions/upload-artifact@v4
              with:
                  name: php8.3-fpm-latest
                  path: ${{ runner.temp }}/php8.3-fpm-latest.tar

    php-composer-install:
        runs-on: ubuntu-latest
        name: Composer Install
        steps:
            - uses: actions/checkout@v4
            - run: |
                  docker network create frontend
                  docker compose run --rm phpfpm composer install
            - name: Archive vendor, var folders
              uses: actions/upload-artifact@v4
              with:
                  name: composer-install
                  path: |
                      vendor
                      var
                  retention-days: 1
                  include-hidden-files: true

    php-test-composer-install:
        runs-on: ubuntu-latest
        needs:
            - php-composer-install
            - docker-image-pull
        name: Validate composer
        steps:
            - uses: actions/checkout@v4
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  name: php8.3-fpm-latest
                  path: ${{ runner.temp }}
            - name: Load image
              run: |
                  docker load --input ${{ runner.temp }}/php8.3-fpm-latest.tar
                  docker image ls -a
            - uses: actions/download-artifact@v4
              with:
                  name: composer-install
            - run: |
                  docker network create frontend
                  docker compose run --rm phpfpm composer validate composer.json --strict
                  docker compose run --rm phpfpm composer normalize --dry-run
                  docker compose run --rm phpfpm composer audit

    php-validate-doctrine-schema:
        runs-on: ubuntu-latest
        name: Validate Doctrine Schema
        needs: php-composer-install
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v4
              with:
                  name: composer-install
            - run: |
                  docker network create frontend
                  docker compose run --rm phpfpm bin/console doctrine:migrations:migrate --no-interaction
                  docker compose run --rm phpfpm bin/console doctrine:schema:validate

    php-code-analysis:
        name: PHP - Code analysis (phpstan)
        needs: php-composer-install
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v4
              with:
                  name: composer-install
            - run: |
                  chmod +x vendor/bin/*
                  docker network create frontend
                  docker compose run --rm phpfpm composer code-analysis

    php-coding-standards-phpcs:
        name: coding-standards-check/phpcs
        needs: php-composer-install
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v4
              with:
                  name: composer-install
            - run: |
                  chmod +x vendor/bin/*
                  docker network create frontend
                  docker compose run --rm phpfpm composer coding-standards-check

    php-twig-coding-standards:
        name: Twig coding standards
        needs: php-composer-install
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
            - uses: actions/download-artifact@v4
              with:
                  name: composer-install
            -   name: Install
                run: |
                    chmod +x vendor/bin/*
                    docker network create frontend
                    docker compose up --detach
            -   name: Coding standards
                run: |
                    docker compose exec phpfpm composer coding-standards-check/twig-cs-fixer

    php-phpunit:
        name: Test suite
        needs: php-composer-install
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v4
              with:
                  name: composer-install
            - name: Test suite
              run: |
                  chmod +x vendor/bin/*
                  docker network create frontend
                  docker compose run -e XDEBUG_MODE=coverage --rm phpfpm vendor/bin/phpunit --coverage-clover=coverage/unit.xml

            - name: Upload coverage to Codecov test
              uses: codecov/codecov-action@v2
              with:
                  files: ./coverage/unit.xml
                  flags: unittests, ${{ matrix.php }}

    changelog:
        runs-on: ubuntu-latest
        name: Changelog should be updated
        strategy:
            fail-fast: false
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
                with:
                    fetch-depth: 2

            -   name: Git fetch
                run: git fetch

            -   name: Check that changelog has been updated.
                run: git diff --exit-code origin/${{ github.base_ref }} -- CHANGELOG.md && exit 1 || exit 0

    assets-coding-standards:
        name: Assets coding standards
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Coding standards
                run: |
                    docker network create frontend
                    docker compose run --rm node npm install
                    docker compose run --rm node npm run actions/check-coding-standards-assets

    markdown-coding-standards:
        name: Markdown coding standards
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Coding standards
                run: |
                    docker network create frontend
                    docker compose run --rm node npm install
                    docker compose run --rm node npm run coding-standards-check/markdownlint
