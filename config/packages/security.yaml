security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            custom_authenticators:
                - App\Security\AzureOIDCAuthenticator
                - ItkDev\OpenIdConnectBundle\Security\CliLoginTokenAuthenticator
            entry_point: App\Security\AzureOIDCAuthenticator
            logout:
                path: /logout

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/invoices/, roles: ROLE_INVOICE }
        - { path: ^/admin/project-billing/, roles: ROLE_PROJECT_BILLING }
        - { path: ^/admin/planning/, roles: ROLE_PLANNING }
        - { path: ^/admin/reports/, roles: ROLE_ADMIN }
        - { path: ^/admin/management-report/, roles: ROLE_REPORT }
        - { path: ^/admin/team-report/, roles: ROLE_REPORT }
        - { path: ^/admin/sprint-report/, roles: ROLE_REPORT }
        - { path: ^/admin/project/, roles: ROLE_ADMIN }
        - { path: ^/admin/client/, roles: ROLE_ADMIN }
        - { path: ^/admin/account/, roles: ROLE_ADMIN }
        - { path: ^/admin/users/, roles: ROLE_ADMIN }
        - { path: ^/admin/view/, roles: ROLE_ADMIN }
        - { path: ^/admin, roles: ROLE_USER }

    role_hierarchy:
        ROLE_ADMIN:
            - ROLE_USER
            - ROLE_INVOICE
            - ROLE_PROJECT_BILLING
            - ROLE_PLANNING
            - ROLE_REPORT
        ROLE_INVOICE: ROLE_USER
        ROLE_PROJECT_BILLING: ROLE_INVOICE
        ROLE_PLANNING: ROLE_USER
        ROLE_REPORT: ROLE_USER

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
